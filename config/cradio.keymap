/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keymap_italian.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

&sk { ignore-modifiers; };

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys

        combo_accent {
            timeout-ms = <300>;
            key-positions = <32 33>;
            bindings = <&mo 5>;
        };

        // internal-left & external-right thumb keys

        combo_sym2 {
            timeout-ms = <200>;
            key-positions = <31 33>;
            bindings = <&mo 4>;
        };

        // both left thumb keys

        lesc {
            bindings = <&kp ESCAPE>;
            key-positions = <12 13>;
            timeout-ms = <200>;
            require-prior-idle-ms = <200>;
            layers = <0 1>;
        };

        resc {
            bindings = <&kp ESCAPE>;
            key-positions = <16 17>;
            timeout-ms = <200>;
            require-prior-idle-ms = <200>;
            layers = <0 2>;
        };
    };

    behaviors {
        dubldot: dubldot {
            compatible = "zmk,behavior-hold-tap";
            label = "DUBLDOT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T               &kp Y               &kp U   &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G               &kp H               &kp J   &kp K      &kp L    &dubldot SEMI COLON
&kp Z  &kp X  &kp C  &kp V  &kp B               &kp N               &kp M   &kp COMMA  &kp DOT  &kp SLASH
                     &mo 2  &mt LSHIFT SPACE    &mt LEFT_GUI SPACE  &tog 1
            >;
        };

        // Numbers and high frequency symbols

        sym_layer {
            bindings = <
&kp N1     &kp N2       &kp N3       &kp N4       &kp N5         &kp N6          &kp N7     &kp N8            &kp N9             &kp N0
&kp LCTRL  &kp IT_USD   &kp IT_LPAR  &kp IT_LBRC  &kp IT_LBKT    &kp MINUS       &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH
&kp LSHFT  &kp IT_PERC  &kp IT_RPAR  &kp IT_RBRC  &kp IT_RBKT    &kp UNDERSCORE  &kp PLUS   &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE
                                     &tog 0       &tog 4         &trans          &trans
            >;
        };

        // Main modifiers and arrow keys

        ext_layer {
            bindings = <
&kp ESC    &trans     &trans      &trans     &trans       &kp PG_UP      &kp HOME        &kp UP        &kp END    &kp CAPS
&sk LALT   &sk LGUI   &sk LSHIFT  &sk LCTRL  &kp RALT     &kp LEFT       &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp DEL
&kp LC(Z)  &kp LC(X)  &kp LC(C)   &kp TAB    &kp LC(V)    &kp LC(BSPC)   &kp BSPC        &trans        &trans     &kp ENTER
                                  &tog 0     &kp ENTER    &kp BACKSPACE  &tog 3
            >;
        };

        // Function keys with modifiers

        fnc_layer {
            bindings = <
&kp F1    &kp F2    &kp F3      &kp F4     &kp F5      &kp F6   &kp F7   &kp F8           &kp F9  &kp F10
&sk LALT  &sk LGUI  &sk LSHIFT  &sk LCTRL  &kp RALT    &kp F11  &kp F12  &kp PRINTSCREEN  &trans  &trans
&none     &none     &none       &none      &none       &none    &none    &none            &none   &none
                                &none      &none       &none    &none
            >;
        };

        // Low frequency symbols.

        symbols_2_layer {
            bindings = <
&kp IT_CARET  &kp IT_UNDER  &kp IT_PND   &kp IT_EUR   &kp IT_HASH    &none  &none  &none  &none  &none
&kp IT_BKTK   &kp IT_TILDE  &kp IT_BSLH  &kp IT_PIPE  &kp IT_AND     &none  &none  &none  &none  &none
&none         &none         &kp IT_SECT  &kp IT_CCED  &kp IT_DEG     &none  &none  &none  &none  &none
                                         &none        &none          &none  &none
            >;
        };

        // Used to type regional accents.

        accent_layer {
            bindings = <
&none        &none        &none        &kp IT_CEGR  &none          &none  &none  &none  &none  &none
&kp IT_AGRV  &kp IT_IGRV  &kp IT_OGRV  &kp IT_EGRV  &kp IT_EACU    &none  &none  &none  &none  &none
&none        &none        &none        &kp IT_UGRV  &none          &none  &none  &none  &none  &none
                                       &none        &none          &none  &none
            >;
        };

        // Used to change the keyboard's settings.

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
